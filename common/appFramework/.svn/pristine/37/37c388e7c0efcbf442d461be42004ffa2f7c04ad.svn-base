<!DOCTYPE HTML>
<html>

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
		<meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
		<title></title>
		<link rel="stylesheet" type="text/css" href="../../css/styles.min.css" />

	</head>

	<body class="">
		<header class="aui-bar aui-bar-nav c-fixed" id="aui-header">
			<a class="aui-pull-left" tapmode onclick="closeWin()">
				<span class="aui-iconfont aui-icon-left c-text-default"></span>返回
			</a>
			<div class="aui-title">
				综合分析
			</div>
		</header>

		<div class="aui-bar aui-bar-nav" style="line-height: 2.4rem;min-height: 2.4rem;">
			&nbsp;
		</div>

		<!--统计分析-->
		<div id="div-body" v-cloak>

			<div class="aui-tab">
				<div v-for="(title,i) in titleArr" class="aui-tab-item" :class="curTab == i ? 'aui-active':''" @click="selectTab(i)">{{title}}</div>
			</div>

			<div v-if="TotalQuery != null && a.indexOf(curTab) == 0" v-for="(obj,a) in TotalQuery" class="c-bg-white aui-margin-b-15 aui-margin-t-15">

				<div class="aui-flex-col aui-flex-middle aui-padded-10 c-border-shadow-1">

					<div class="aui-flex-item-6 aui-font-size-16 c-text-bold aui-padded-l-10">{{obj.title}}</div>

					<div class="aui-flex-item-6 aui-padded-r-10 aui-text-right">
						<span class="aui-padded-l-5 aui-font-size-18 c-text-bold ">
							{{obj.allCount | integerFormat}}
							<span class="aui-font-size-12">{{obj.allCount | decimalFormat}}</span> {{obj.unit}}
						</span>
					</div>
				</div>

				<div class="aui-flex-col aui-padded-t-5 aui-padded-b-5 aui-margin-l-10 aui-margin-r-10">
					<div v-for="(item,index) in obj.dataInfo" class="aui-flex-item-12">
						<div class="aui-margin-10 c-radius" :style="{color:colorArr[index]}">
							<div class="aui-flex-col aui-flex-middle">
								<div class="aui-flex-item-9 aui-font-size-16 c-text-bold aui-padded-l-0">
									{{item.name}}：
									<span class="aui-padded-l-5 aui-font-size-14 c-text-bold">
									{{item.value | integerFormat}}
									<span class="aui-font-size-12">{{item.value | decimalFormat}}</span>
								</span>
								</div>
								<div v-if="item.progress != null" class="aui-flex-item-3 aui-text-right aui-font-size-16 c-text-bold">{{item.progress}}</div>
							</div>

							<div v-if="item.progress != null" class="aui-progress aui-margin-b-5" style="height: 0.25rem;">
								<div class="aui-progress-bar" :style="{width:item.progress,background:colorArr[index]}"></div>
							</div>

							<div class="aui-text-right">
								<!--<span v-if="item.dayvalue != null" class="aui-padded-r-5 aui-text-info aui-font-size-16 c-text-bold">{{item.dayvalue}}</span>-->
								

							</div>
						</div>

					</div>
				</div>

				<div style="height: 10rem;width: 100%;" :id="obj.id"></div>
				<div class="aui-text-center aui-padded-5" onclick="toggleDraw(this)">	
							<i class="aui-iconfont aui-icon-top"></i>
						</div>
			</div>

		</div>
	</body>
	<script type="text/javascript" src="../../script/common.min.js"></script>
	<script type="text/javascript" src="../../script/aui.min.js"></script>
	<script type="text/javascript" src="../../script/plugins.min.js"></script>

	<script type="text/javascript" src="../../script/CryptoJS/core-min.js"></script>
	<script type="text/javascript" src="../../script/CryptoJS/cipher-core-min.js"></script>
	<script type="text/javascript" src="../../script/CryptoJS/aes-min.js"></script>
	<script type="text/javascript" src="../../script/CryptoJS/md5-min.js"></script>
	<script type="text/javascript" src="../../script/chart/echarts.common.min.js"></script>
	<script type="text/javascript">
		jsTools.initPage(function() {
			jsTools.Win.init('aui-header');
			initAnalysis();
		});

		function closeWin() {
			jsTools.Win.close();
		}

		var vm = new Vue({
			el: '#div-body',
			data: {
				TotalQuery: null,
				MerchantInAmountTotal: null,
				titleArr: {
					Day: '今日成交',
					All: '合计成交',
					
				},
				curTab: 'Day',
				colorArr: ["#ff7b7a", "#009688", "#C48901", "#5481BB", "#7DC8AF"],
			},
			filters: {
				integerFormat: function(num) {
					if(num == null) return 0;
					num = num.toString();
					return jsTools.numberFormat(num.split('.')[0]);
				},
				decimalFormat: function(num) {
					if(num == null) return '';
					num = num.toString();

					var arr = num.split('.');
					if(arr.length == 2) {
						return '. ' + arr[1];
					}
				}
			},
			methods: {
				selectTab: function(ret) {
					vm.curTab = ret;
					//					drawChart(vm.TotalQuery);
				}
			},

		});

		/*********统计相关************/
		function moneyFormat(ret) {
			return(ret).toFixed(2);
		}

		function initAnalysis() {
			GetTotalQuery();

			setInterval(function() {
				GetTotalQuery();

			}, 60 * 1000);
		}

		function GetTotalQuery() {
			var dat = {
				serviceName: jsTools.Server.TotalQueryService,
				data: {}
			};

			jsTools.ajax(dat, function(result) {
				for(var item in result) {
					if(result[item] == null || result[item] == '')
						result[item] = 0;
				}
				//资金总量
				result.allCountTotalAmount = result.OutTotalAmount + result.InTotalAmount;
				//总注册量
				result.allCountMemberNums = result.CompayMemberNums + result.PersonMemberNums;
				//总支付量
				result.allCountNums = result.RechargeNums + result.PayNums + result.CashNums + result.RefundNums + result.SettleNums;
				//总支付金额
				result.allCountAmount = result.RechargeAmount + result.PayAmount + result.CashAmount + result.RefundAmount + result.SettleAmount;
				//日注册量
				result.allCountDayMemberNums = result.DayCompayMemberNums + result.DayPersonMemberNums;
				//日支付量
				result.allCountDayNums = result.DayRechargeNums + result.DayPayNums + result.DayCashNums + result.DayRefundNums + result.DaySettleNums;
				//日支付金额
				result.allCountDayAmount = result.DayRechargeAmount + result.DayPayAmount + result.DayCashAmount + result.DayRefundAmount + result.DaySettleAmount;

				vm.TotalQuery = {
					AllTotalAmount: { //总资金量
						id: 'TotalAmount',
						target: 0,
						title: '总资金量',
						unit: '元',
						dataInfo: [{
							name: '付款账户',
							value: moneyFormat(result.OutTotalAmount),
							progress: (moneyFormat(result.OutTotalAmount) * 100 / moneyFormat(result.allCountTotalAmount)).toFixed(2) + '%'
						}, {
							name: '收款账户',
							value: moneyFormat(result.InTotalAmount),
							progress: (moneyFormat(result.InTotalAmount) * 100 / moneyFormat(result.allCountTotalAmount)).toFixed(2) + '%'
						}],
						allCount: moneyFormat(result.allCountTotalAmount),
					},
					AllRegisterInfo: { //总计注册会员
						id: 'AllRegisterInfo',
						target: 0,
						title: '总注册会员',
						unit: '人',
						dataInfo: [{
							name: '公司会员',
							//							dayvalue: result.DayCompayMemberNums,
							value: result.CompayMemberNums,

							progress: (result.CompayMemberNums * 100 / result.allCountMemberNums).toFixed(2) + '%',
						}, {
							name: '个人会员',
							//							dayvalue: result.DayPersonMemberNums,
							value: result.PersonMemberNums,
							progress: (result.PersonMemberNums * 100 / result.allCountMemberNums).toFixed(2) + '%',
						}],
						//						dayallCount: result.DayCompayMemberNums + result.DayPersonMemberNums,
						allCount: result.allCountMemberNums,
					},
					AllTradingVolumeInfo: {
						id: 'AllTradingVolumeInfo',
						target: 0,
						title: '总交易量',
						unit: '笔',
						dataInfo: [{
							name: '充值',
							dayvalue: result.DayRechargeNums,
							value: result.RechargeNums,
							progress: (result.RechargeNums * 100 / result.allCountNums).toFixed(2) + '%',
						}, {
							name: '支付',
							dayvalue: result.DayPayNums,
							value: result.PayNums,
							progress: (result.PayNums * 100 / result.allCountNums).toFixed(2) + '%',
						}, {
							name: '提现',
							dayvalue: result.DayCashNums,
							value: result.CashNums,
							progress: (result.CashNums * 100 / result.allCountNums).toFixed(2) + '%',
						}, {
							name: '退款',
							dayvalue: result.DayRefundNums,
							value: result.RefundNums,
							progress: (result.RefundNums * 100 / result.allCountNums).toFixed(2) + '%',
						},{
							name: '清算',
							dayvalue: result.DaySettleNums,
							value: result.SettleNums,
							progress: (result.SettleNums * 100 / result.allCountNums).toFixed(2) + '%',
						}],

						allCount: result.allCountNums
					},
					AllATurnoverInfo: { //总支付额
						id: 'AllATurnoverInfo',
						target: 0,
						title: '总交易额',
						unit: '元',
						dataInfo: [{
							name: '充值',

							value: moneyFormat(result.RechargeAmount),
							progress: (moneyFormat(result.RechargeAmount) * 100 / moneyFormat(result.allCountAmount)).toFixed(2) + '%',
						}, {
							name: '支付',

							value: moneyFormat(result.PayAmount),
							progress: (moneyFormat(result.PayAmount) * 100 / moneyFormat(result.allCountAmount)).toFixed(2) + '%',
						}, {
							name: '提现',

							value: moneyFormat(result.CashAmount),
							progress: (moneyFormat(result.CashAmount) * 100 / moneyFormat(result.allCountAmount)).toFixed(2) + '%',
						}, {
							name: '退款',

							value: moneyFormat(result.RefundAmount),
							progress: (moneyFormat(result.RefundAmount) * 100 / moneyFormat(result.allCountAmount)).toFixed(2) + '%',
						},{
							name: '清算',

							value: moneyFormat(result.SettleAmount),
							progress: (moneyFormat(result.SettleAmount) * 100 / moneyFormat(result.allCountAmount)).toFixed(2) + '%',
						}],

						allCount: moneyFormat(result.allCountAmount)
					},

					DayRegisterInfo: { //今日注册会员
						id: 'DayRegisterInfo',
						target: 1,
						title: '今日注册会员',
						unit: '人',
						dataInfo: [{
							name: '公司会员',
							value: result.DayCompayMemberNums,

							progress: result.allCountDayMemberNums == 0 ? '0%' : (result.DayCompayMemberNums * 100 / result.allCountDayMemberNums).toFixed(2) + '%',
						}, {
							name: '个人会员',

							value: result.DayPersonMemberNums,
							progress: result.allCountDayMemberNums == 0 ? '0%' : (result.DayPersonMemberNums * 100 / result.allCountDayMemberNums).toFixed(2) + '%',
						}],

						allCount: result.allCountDayMemberNums,
					},

					DayTradingVolumeInfo: {
						id: 'DayTradingVolumeInfo',
						target: 1,
						title: '今日交易量',
						unit: '笔',
						dataInfo: [{
							name: '充值',

							value: result.DayRechargeNums,
							progress: (result.DayRechargeNums * 100 / result.allCountDayNums).toFixed(2) + '%',
						}, {
							name: '支付',

							value: result.DayPayNums,
							progress: (result.DayPayNums * 100 / result.allCountDayNums).toFixed(2) + '%',
						}, {
							name: '提现',

							value: result.DayCashNums,
							progress: (result.DayCashNums * 100 / result.allCountDayNums).toFixed(2) + '%',
						}, {
							name: '退款',

							value: result.DayRefundNums,
							progress: (result.DayRefundNums * 100 / result.allCountDayNums).toFixed(2) + '%',
						},{
							name: '清算',
						
							value: result.DaySettleNums,
							progress: (result.DaySettleNums * 100 / result.allCountDayNums).toFixed(2) + '%',
						}],
						allCount: result.allCountDayNums,
					},

					DayATurnoverInfo: { //今日支付额
						id: 'DayATurnoverInfo',
						target: 1,
						title: '今日交易额',
						unit: '元',
						dataInfo: [{
							name: '充值',
							value: moneyFormat(result.DayRechargeAmount),

							progress: (moneyFormat(result.DayRechargeAmount) * 100 / moneyFormat(result.allCountDayAmount)).toFixed(2) + '%',
						}, {
							name: '支付',
							value: moneyFormat(result.DayPayAmount),

							progress: (moneyFormat(result.DayPayAmount) * 100 / moneyFormat(result.allCountDayAmount)).toFixed(2) + '%',
						}, {
							name: '提现',
							value: moneyFormat(result.DayCashAmount),

							progress: (moneyFormat(result.DayCashAmount) * 100 / moneyFormat(result.allCountDayAmount)).toFixed(2) + '%',
						}, {
							name: '退款',
							value: moneyFormat(result.DayRefundAmount),

							progress: (moneyFormat(result.DayRefundAmount) * 100 / moneyFormat(result.allCountDayAmount)).toFixed(2) + '%',
						},{
							name: '清算',
							value: moneyFormat(result.DaySettleAmount),
	
							progress: (moneyFormat(result.DaySettleAmount) * 100 / moneyFormat(result.allCountDayAmount)).toFixed(2) + '%',
						}],
						allCount: moneyFormat(result.allCountDayAmount),

					},
				};
				drawChart(vm.TotalQuery);
			});
		}

		var chartPie = new Array();

		function drawChart(dt, id) {
			setTimeout(function() {
				for(var t in dt) {
					if(id == null || dt[t].id == id) {
						if(!document.getElementById(dt[t].id)) continue;
						// 基于准备好的dom，初始化echarts实例
						if(chartPie[t] == null) {
							chartPie[t] = echarts.init(document.getElementById(dt[t].id));

							initPieOption(dt[t].unit, dt[t].dataInfo);

							chartPie[t].setOption(option, true);
						} else {
							chartPie[t].resize();
						}

						if(dt[t].id == id)
							return;
					}

				}
			}, 200);

		}

		function initPieOption(unit, dt) {
			option = {
				legend: {
					orient: 'vertical',
					right: '10px',
					data: dt
				},

				series: [{
					name: '',
					type: 'pie',
					radius: ['40%', '80%'],
					center: ['50%', '55%'],
					avoidLabelOverlap: false,
					data: dt,
					label: {
						normal: {
							show: false,
							position: 'center'
						},
						emphasis: {
							show: true,
							formatter: "{b}\n{d}%",
							textStyle: {
								fontSize: '15',
								fontWeight: 'bold'
							}
						}
					},
					labelLine: {
						normal: {
							show: false
						}
					},

				}]
			};

		}

		function toggleDraw(el) {
			var cur = $(el);
			var pre = cur.prev();
			var child = $(el).children();

			pre.toggle();
			child.toggleClass('aui-icon-top').toggleClass('aui-icon-down');
			drawChart(vm.TotalQuery, pre.attr('id'));
		}
	</script>

</html>